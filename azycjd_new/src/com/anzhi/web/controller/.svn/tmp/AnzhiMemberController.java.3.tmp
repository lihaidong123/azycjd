package com.anzhi.web.controller;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import ynzc.wuyuehu.email.EmailUtil;

import com.anzhi.web.pojo.AnzhiAuthor;
import com.anzhi.web.pojo.AnzhiExperienceRecord;
import com.anzhi.web.pojo.AnzhiMember;
import com.anzhi.web.service.IAnzhiAuthorService;
import com.anzhi.web.service.IAnzhiExperienceRecordService;
import com.anzhi.web.service.IAnzhiMemberService;
import com.anzhi.web.service.IAnzhiMessageService;
import com.anzhi.web.util.GetCondition;
import com.anzhi.web.util.QueryList;
import com.anzhi.web.util.UtilData;
@Controller
public class AnzhiMemberController extends GetCondition {
	@Autowired
	private IAnzhiMemberService anzhimemberService;
	@Autowired
	private IAnzhiAuthorService anzhiauthorService;
	@Autowired
	private IAnzhiExperienceRecordService anzhiexperiencerecordService;
	@Autowired
	private IAnzhiMessageService anzhimessageService;
	@RequestMapping(value="/anzhimember/addAnzhiMember",method=RequestMethod.POST)
	public void addAnzhiMember(HttpServletRequest request,HttpServletResponse response,AnzhiMember anzhimember){
		if(request.getSession().getAttribute("addAnzhiMemberSession")==null){
			try{
				request.getSession().setAttribute("addAnzhiMemberSession","true");
				anzhimember.setAddTime(getTimestamp());
				if(anzhimember.getId()==null||anzhimember.getId()==0){
					String memberNotwo=request.getParameter("memberNotwo");
					if(memberNotwo!=null&&!memberNotwo.equals("")){
						anzhimember.setMemberNo(memberNotwo);
						anzhimember.setMemberNick(request.getParameter("memberNicktwo"));
						anzhimember.setMenberPassword(this.getMD5Str(request.getParameter("menberPasswords")));
					}else{
						anzhimember.setMenberPassword(this.getMD5Str(anzhimember.getMenberPassword()));
					}
					anzhimember.setState(0);
					anzhimember.setIsAccptMessage(1);
					anzhimember.setBookshelfPublic(0);
					anzhimember.setMemberType(0);
					anzhimember.setMemberExperience(0);
					anzhimember.setMemberMoney(0);
					anzhimember.setIsAddComment(0);
					anzhimember.setIsNoLogin(0);
					anzhimember.setReadMoney(0);
					anzhimemberService.addAnzhiMember(anzhimember);
					
					QueryList<AnzhiMember> list = anzhimemberService.findAnzhiMemberAll(10, 1, " and member_no='"+anzhimember.getMemberNo()+"'");
					if(list.getList().size()==0){
						response.getWriter().write("用户名不存在!");
						response.sendRedirect(request.getContextPath()+"/author_login.jsp");
					}else{
						AnzhiMember t=list.getList().get(0);
						if(t.getMenberPassword().trim().equals(anzhimember.getMenberPassword())){
							this.remove(request, response);
							t.setUseAnzhiMonay(this.getIntBySql("select sum(consume_anzhi_money) from anzhi_consume where member_id="+t.getId()));
							request.getSession().setAttribute("loginUsers", t);
							request.getSession().setAttribute("logintime", new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
							QueryList<AnzhiAuthor> listau=anzhiauthorService.findAnzhiAuthorAll(10, 1, " and member_id="+t.getId());
							request.getSession().setAttribute("loginAuthors",listau.getList().size()==1? listau.getList().get(0):null);
							
							
							//获得是否签到
							QueryList<AnzhiExperienceRecord> qdlist=anzhiexperiencerecordService.findAnzhiExperienceRecordAll(100000, 1, " and experience_type= 0 and member_id="+t.getId()+" and add_time between '"+this.getDateType(0)+"' and '"+this.getDateType(1)+"'");
							if(qdlist.getList().size()==0){
								request.getSession().setAttribute("qiandao", "no");
							}else{
								request.getSession().setAttribute("qiandao", "yes");
								int qiandaonum=this.getIntBySql("select count(*) from anzhi_experience_record where  experience_type= 0 and member_id="+t.getId());
								request.getSession().setAttribute("qiandaonum", qiandaonum);
								String ts=this.getStringBySql("select top 1 add_time from anzhi_experience_record where  experience_type= 0 and member_id="+t.getId()+" order by id desc");
								try {
									request.getSession().setAttribute("lastSignTime", new SimpleDateFormat("yyyy-MM-dd").format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(ts)));
								} catch (ParseException e) {
									// TODO Auto-generated catch block
									e.printStackTrace();
								}
							}
							
							if(request.getParameter("wantToWriter")!=null&&request.getParameter("wantToWriter").equals("yes")){
								response.sendRedirect(request.getContextPath()+"/author_apply.jsp");
								return;
							}
							
							response.sendRedirect(request.getContextPath()+"/index.html");
						}else{
							response.getWriter().write("密码错误!");
							response.sendRedirect(request.getContextPath()+"/author_login.jsp");
						}
					}
					
				}else{
					anzhimemberService.updateAnzhiMember(anzhimember,0);
				}
				/*if(anzhimember.getId()==null||anzhimember.getId()==0){
					response.sendRedirect(request.getContextPath()+"/author_login.jsp");
				}else{
					response.sendRedirect(request.getContextPath()+"/anzhimember/findAnzhiMemberAll.do");
				}*/
			}catch (Exception e) {
			}finally{
				request.getSession().removeAttribute("addAnzhiMemberSession");
			}
		}
		request.getSession().setAttribute("directPageName", "");
		
	}
	
	@RequestMapping(value="/anzhimember/checkYanzhengCode",method=RequestMethod.POST)
	public void checkYanzhengCode(HttpServletRequest request,HttpServletResponse response) throws IOException{
		String privateKey = "bac890c0989b2e9bd28cccee89be9b65";
        GeetestLib geetest = new GeetestLib(privateKey);
        boolean gtResult = false;

        if (geetest.resquestIsLegal(request)) {
            gtResult = geetest.validateRequest(request);
        } else {
            // TODO use you own system
            gtResult = false;

        }
        
        if(gtResult){
        	response.getWriter().write("yes");
        }else{
        	response.getWriter().write("no");
        }
        
	}

	@RequestMapping(value="/anzhimember/addBatchAnzhiMember",method=RequestMethod.POST)
	public String addBatchAnzhiMember(HttpServletRequest request,HttpServletResponse response){
		List<AnzhiMember> list=new ArrayList<AnzhiMember>();
		anzhimemberService.addBatchAnzhiMember(list);
		request.getSession().setAttribute("directPageName", "");
		request.getSession().setAttribute("directPageName", "");
		return "redirect:";
	}

	@RequestMapping(value="/anzhimember/delAnzhiMember",method=RequestMethod.POST)
	public void delAnzhiMember(HttpServletRequest request,HttpServletResponse response){
		if(request.getSession().getAttribute("delAnzhiMemberSession")==null){
			try{
				request.getSession().setAttribute("delAnzhiMemberSession","true");
				int id=request.getParameter("anzhimemberId")==null?0:Integer.parseInt(request.getParameter("anzhimemberId"));
				anzhimemberService.delAnzhiMember(id);
				response.sendRedirect(request.getContextPath()+"/anzhimember/findAnzhiMemberAll.do");
			}catch (Exception e) {
			}finally{
				request.getSession().removeAttribute("delAnzhiMemberSession");
			}
		}
		request.getSession().setAttribute("directPageName", "");
	}

	@RequestMapping(value="/anzhimember/delBatchAnzhiMember",method=RequestMethod.POST)
	public String delBatchAnzhiMember(HttpServletRequest request,HttpServletResponse response){
		String ids=request.getParameter("anzhimemberIds");
		anzhimemberService.delBatchAnzhiMember(ids);
		request.getSession().setAttribute("directPageName", "");
		return "redirect:";
	}

	@RequestMapping(value="/anzhimember/updateAnzhiMember",method=RequestMethod.POST)
	public String updateAnzhiMember(HttpServletRequest request,HttpServletResponse response,AnzhiMember anzhimember){
		if(request.getSession().getAttribute("updateAnzhiMemberSession")==null){
			try{
				String id=request.getParameter("id");
				
				request.getSession().setAttribute("updateAnzhiMemberSession","true");
				anzhimemberService.updateAnzhiMember(anzhimember,0);
			}catch (Exception e) {
			}finally{
				request.getSession().removeAttribute("updateAnzhiMemberSession");
			}
		}
		request.getSession().setAttribute("directPageName", "");
		return "redirect:";
	}

	@RequestMapping(value="/anzhimember/findAnzhiMemberAll")
	public String findAnzhiMemberAll(HttpServletRequest request,HttpServletResponse response){
		int size=request.getParameter("size")!=null&&request.getParameter("size")!=""?Integer.parseInt(request.getParameter("size")):10;
		int pageNum=request.getParameter("pageNum")!=null&&request.getParameter("pageNum")!=""?Integer.parseInt(request.getParameter("pageNum")):0;
		String condition=this.getCondition(anzhimemberConditionArr, request, response);
		QueryList<AnzhiMember> list = anzhimemberService.findAnzhiMemberAll(size, pageNum, condition);
		request.setAttribute("anzhimemberList", list);
		return this.getPageName(request, "admin/AnzhiMemberManager");
	}

	@RequestMapping(value="/anzhimember/findAnzhiMemberById",method=RequestMethod.POST)
	public String findAnzhiMemberById(HttpServletRequest request,HttpServletResponse response){
		QueryList<AnzhiMember> list = anzhimemberService.findAnzhiMemberAll(10, 1, " and id="+Integer.parseInt(request.getParameter("anzhimemberId")));
		request.setAttribute("pojo", list.getList().size()!=1?null:list.getList().get(0));
		return this.getPageName(request, "admin/AnzhiMemberAction");
	}

	@RequestMapping(value="/anzhimember/anzhimemberAction",method=RequestMethod.POST)
	public String anzhimemberAction(HttpServletRequest request,HttpServletResponse response){
		return this.getPageName(request, "admin/AnzhiMemberAction");
	}
	
	@RequestMapping(value="/anzhimember/updateAnzhiMemberMySelf",method=RequestMethod.POST)
	public String updateAnzhiMemberMySelf(HttpServletRequest request,HttpServletResponse response,AnzhiMember anzhimember){
		String type=request.getParameter("type");
		if(request.getSession().getAttribute("updateAnzhiMemberSession")==null){
			try{
				AnzhiMember  a=this.getLoginMember(request);
				int types=0;
				if(type.equals("0")){
					a.setMemberQq(anzhimember.getMemberQq());
					//说明用户重新上传过头像
					if(!a.getMemberHeadImg().equals(anzhimember.getMemberHeadImg())){
						types=1;
					}
					a.setMemberHeadImg(anzhimember.getMemberHeadImg());
					a.setMemberSex(anzhimember.getMemberSex());
					a.setMemberAddress(anzhimember.getMemberAddress());
					a.setMemberBirthday(this.getTimestamp(request, "memberBirthdays"));
					a.setMemberEmail(anzhimember.getMemberEmail());
					a.setMemberTel(anzhimember.getMemberTel());
					a.setVote(anzhimember.getVote());
					a.setId(this.getLoginMemberId(request));
				}else if(type.equals("1")){
					a.setIsAccptMessage(anzhimember.getIsAccptMessage());
					a.setBookshelfPublic(anzhimember.getBookshelfPublic());
				}else if(type.equals("2")){
					a.setMemberRealName(anzhimember.getMemberRealName());
					a.setMemberCode(anzhimember.getMemberCode());
					a.setMemberTel(anzhimember.getMemberTel());
				}else if(type.equals("3")){
					a.setMenberPassword(anzhimember.getMenberPassword());
				}
				request.getSession().setAttribute("updateAnzhiMemberSession","true");
				anzhimemberService.updateAnzhiMember(a,types);
			}catch (Exception e) {
			}finally{
				request.getSession().removeAttribute("updateAnzhiMemberSession");
			}
		}
		if(type.equals("0")){
			request.setAttribute("pageDirecNum", "1");
		}else if(type.equals("1")){
			request.setAttribute("pageDirecNum", "2");
		}else if(type.equals("2")){
			request.setAttribute("pageDirecNum", "3");
		}else if(type.equals("3")){
			request.setAttribute("pageDirecNum", "4");
		}
		return "pageDirec";
	}

	@RequestMapping(value="/anzhimember/login",method=RequestMethod.POST)
	public void login(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("text/html;charset=utf-8");
		String uname=request.getParameter("username");
		String upass=request.getParameter("userpass");

		QueryList<AnzhiMember> list = anzhimemberService.findAnzhiMemberAll(10, 1, " and (member_no='"+uname.trim()+"' or member_nick='"+uname.trim()+"' or member_tel='"+uname.trim()+"' or member_email='"+uname.trim()+"' )");
		if(list.getList().size()==0){
			response.getWriter().write("用户名不存在!");
		}else{
			AnzhiMember t=list.getList().get(0);
			if(t.getIsNoLogin()==1){
				response.getWriter().write("您已经被封号!");
				return;
			}
			if(t.getMenberPassword().trim().equals(this.getMD5Str(upass.trim()))){
				this.remove(request, response);
				t.setUseAnzhiMonay(this.getIntBySql("select sum(consume_anzhi_money) from anzhi_consume where member_id="+t.getId()));
				request.getSession().setAttribute("loginUsers", t);
				request.getSession().setAttribute("logintime", new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
				QueryList<AnzhiAuthor> listau=anzhiauthorService.findAnzhiAuthorAll(10, 1, " and member_id="+t.getId());
				request.getSession().setAttribute("loginAuthors",listau.getList().size()==1? listau.getList().get(0):null);
				
				//获得是否签到
				QueryList<AnzhiExperienceRecord> qdlist=anzhiexperiencerecordService.findAnzhiExperienceRecordAll(100000, 1, " and experience_type= 0 and member_id="+t.getId()+" and add_time between '"+this.getDateType(0)+"' and '"+this.getDateType(1)+"'");
				if(qdlist.getList().size()==0){
					request.getSession().setAttribute("qiandao", "no");
				}else{
					request.getSession().setAttribute("qiandao", "yes");
					int qiandaonum=this.getIntBySql("select count(*) from anzhi_experience_record where  experience_type= 0 and member_id="+t.getId());
					request.getSession().setAttribute("qiandaonum", qiandaonum);
					String ts=this.getStringBySql("select top 1 add_time from anzhi_experience_record where  experience_type= 0 and member_id="+t.getId()+" order by id desc");
					try {
						request.getSession().setAttribute("lastSignTime", new SimpleDateFormat("yyyy-MM-dd").format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(ts)));
					} catch (ParseException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
				response.getWriter().write("登录成功!");
			}else{
				response.getWriter().write("密码错误!");
			}
		}
		
	}
	
	public void remove(HttpServletRequest request,HttpServletResponse response){
		request.getSession().removeAttribute("loginUsers");
		request.getSession().removeAttribute("loginWebEditorUser");
		request.getSession().removeAttribute("logintime");
		request.getSession().removeAttribute("qiandaonum");
		request.getSession().removeAttribute("yetReadId");
		request.getSession().removeAttribute("noReadMessageInfo");
	}
	
	@RequestMapping(value="/anzhi/adminOutSystem")
	public String  outSystem(HttpServletRequest request,HttpServletResponse response){
		this.remove(request, response);
		return "tiaoZhuan";
	}
	
	@RequestMapping(value="/anzhi/updatePass",method=RequestMethod.POST)
	public void updatePass(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("text/html;charset=utf-8");
		String oldPass=request.getParameter("oldPass");
		AnzhiMember us=this.getLoginMember(request);
		if(us==null){
			response.sendRedirect(request.getContextPath()+"/index");
		}else{
			if(us.getMenberPassword().trim().equals(this.getMD5Str(oldPass.trim()))){
				us.setMenberPassword(this.getMD5Str(request.getParameter("newPass")));
				anzhimemberService.updateAnzhiMember(us,5);
				request.getSession().setAttribute("loginUsers", us);
				response.getWriter().write("密码修改成功!");
			}else{
				response.getWriter().write("原密码输入错误!");
			}
		}
		
	}
	
	@RequestMapping(value="/anzhimember/findAnzhiMemberByNo",method=RequestMethod.POST)
	public void findAnzhiMemberByNo(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("text/html;charset=utf-8");
		String name=request.getParameter("name");
		String info="";
		if(name==null||name.equals("")){
			info="2";
			response.getWriter().write(info);
		}else{
			QueryList<AnzhiMember> list = anzhimemberService.findAnzhiMemberAll(10, 1, " and member_no='"+name.trim()+"'");
			if(list.getList().size()==0){
				info="0";
				response.getWriter().write(info);
			}else{
				info="1";
				response.getWriter().write(info);
			}
		}
		
	}
	
	@RequestMapping(value="/anzhimember/findAnzhiMemberByNick",method=RequestMethod.POST)
	public void findAnzhiMemberByNick(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("text/html;charset=utf-8");
		String name=request.getParameter("name");
		String info="";
		if(name==null||name.equals("")){
			info="2";
			response.getWriter().write(info);
		}else{
			QueryList<AnzhiMember> list = anzhimemberService.findAnzhiMemberAll(10, 1, " and member_nick='"+name.trim()+"'");
			if(list.getList().size()==0){
				info="0";
				response.getWriter().write(info);
			}else{
				info="1";
				response.getWriter().write(info);
			}
		}
		
	}
	
	@RequestMapping(value="/anzhimember/findAnzhiMemberByTel",method=RequestMethod.POST)
	public void findAnzhiMemberByTel(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("text/html;charset=utf-8");
		String tel=request.getParameter("tel");
		String info="";
		if(tel==null||tel.equals("")){
			info="2";
			response.getWriter().write(info);
		}else{
			QueryList<AnzhiMember> list = anzhimemberService.findAnzhiMemberAll(10, 1, " and member_tel='"+tel.trim()+"'");
			if(list.getList().size()==0){
				info="0";
				response.getWriter().write(info);
			}else{
				info="1";
				response.getWriter().write(info);
			}
		}
		
	}
	
	@RequestMapping(value="/anzhimember/findAnzhiMemberByEmail",method=RequestMethod.POST)
	public void findAnzhiMemberByEmail(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("text/html;charset=utf-8");
		String email=request.getParameter("email");
		String info="";
		if(email==null||email.equals("")){
			info="2";
			response.getWriter().write(info);
		}else{
			QueryList<AnzhiMember> list = anzhimemberService.findAnzhiMemberAll(10, 1, " and member_email='"+email.trim()+"'");
			if(list.getList().size()==0){
				info="0";
				response.getWriter().write(info);
			}else{
				info="1";
				response.getWriter().write(info);
			}
		}
		
	}
	
	@RequestMapping(value="/anzhimember/findAnzhiMemberExperience",method=RequestMethod.POST)
	public String findAnzhiMemberExperience(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("text/html;charset=utf-8");
		UtilData a=new UtilData();
		String[] b=a.duzhejingyan;
		AnzhiMember anzhi=this.getLoginMember(request);
		if(anzhi==null){
			return this.getPageName(request, "index");
		}else{
			/*int jingyan=anzhi.getMemberExperience();
			for(int i=0;i<b.length;i++){
				String c=b[i];
				if(jingyan<Integer.parseInt(c)&&jingyan!=0&&jingyan>Integer.parseInt(b[0])){
					request.setAttribute("nowjibie", jingyan);
					request.setAttribute("shangyijibie", b[i-1]);
					request.setAttribute("xiayijibie", b[i]);
					request.setAttribute("dengji", i+1);
					double xia=Integer.parseInt(b[i]);
					double divchangdu=Double.parseDouble(jingyan+"")/xia;
					request.setAttribute("divchangdu", divchangdu*100);
					break;
				}else if(jingyan>0&&jingyan<Integer.parseInt(b[0])){
					request.setAttribute("nowjibie", jingyan);
					request.setAttribute("shangyijibie", 0);
					request.setAttribute("xiayijibie", b[0]);
					request.setAttribute("dengji", 1);
					request.setAttribute("divchangdu", jingyan);
				}else if(jingyan==0){
					request.setAttribute("nowjibie", 0);
					request.setAttribute("shangyijibie", 0);
					request.setAttribute("xiayijibie", b[0]);
					request.setAttribute("dengji", 1);
					request.setAttribute("divchangdu", 0);
					
				}
			}
			//查询签到没有以及经验值
			QueryList<AnzhiExperienceRecord> qdlist=anzhiexperiencerecordService.findAnzhiExperienceRecordAll(100000, 1, " and experience_type= 0 and member_id="+anzhi.getId()+" and add_time between '"+this.getDateType(0)+"' and '"+this.getDateType(1)+"'");
			if(qdlist.getList().size()==0){
				request.setAttribute("qiandao", "no");
				request.setAttribute("qiandaojy", 0);
			}else{
				request.setAttribute("qiandao", "yes");
				request.setAttribute("qiandaojy", qdlist.getList().get(0).getExperienceNum());
			}
			//查询发布动态没有以及经验值
			QueryList<AnzhiExperienceRecord> dtlist=anzhiexperiencerecordService.findAnzhiExperienceRecordAll(100000, 1, " and experience_type= 1 and member_id="+anzhi.getId()+" and add_time between '"+this.getDateType(0)+"' and '"+this.getDateType(1)+"'");
			if(dtlist.getList().size()<3){
				request.setAttribute("dongtai", "no");
				request.setAttribute("dongtaijy", this.getIntBySql("select sum(experience_num) from anzhi_experience_record where experience_type= 1 and member_id="+anzhi.getId()+" and add_time between '"+this.getDateType(0)+"' and '"+this.getDateType(1)+"'"));
			}else{
				request.setAttribute("dongtai", "yes");
				request.setAttribute("dongtaijy", 6);
			}
			
			//查询点赞没有以及经验值
			QueryList<AnzhiExperienceRecord> dzlist=anzhiexperiencerecordService.findAnzhiExperienceRecordAll(100000, 1, " and experience_type= 8 and member_id="+anzhi.getId()+" and add_time between '"+this.getDateType(0)+"' and '"+this.getDateType(1)+"'");
			if(dzlist.getList().size()==0){
				request.setAttribute("dianzan", "no");
				request.setAttribute("dianzanjy", 0);
			}else{
				request.setAttribute("dianzan", "yes");
				request.setAttribute("dianzanjy", 2);
			}
			
			//查询评论没有以及经验值
			QueryList<AnzhiExperienceRecord> pllist=anzhiexperiencerecordService.findAnzhiExperienceRecordAll(100000, 1, " and experience_type= 6 and member_id="+anzhi.getId()+" and add_time between '"+this.getDateType(0)+"' and '"+this.getDateType(1)+"'");
			if(pllist.getList().size()==0){
				request.setAttribute("pinglun", "no");
				request.setAttribute("pinglunjy", 0);
			}else{
				request.setAttribute("pinglun", "yes");
				request.setAttribute("pinglunjy", 5);
			}*/
			anzhimemberService.everyDayTask(request, anzhi);
			String pagename=this.getPageName(request, "index/my_infomation_basic");
			return this.getPageName(request, pagename);
		}
	}
	
	
	/**
	 * 评论区域点击会员显示会员信息
	 */
	@RequestMapping(value="/anzhimember/memberInfo")
	public String memberInfo(HttpServletRequest request,HttpServletResponse response){
		if(this.getInt(request, "memberId")!=-1){
			return anzhimemberService.memberInfo(request, this.getLoginMember(request));
		}
		return "500";
	}
	
	@RequestMapping(value="/anzhimember/resetpass",method=RequestMethod.POST)
	public void resetpass(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("textml;charset=utf-8");
		if(this.checkParam(request, "id")){
			QueryList<AnzhiMember> ls=anzhimemberService.findAnzhiMemberAll(1, 1, " and id="+this.getInt(request, "id"));
			if(ls.getList().size()==0){
				response.getWriter().write("用户数据读取错误!");
			}else{
				AnzhiMember am=ls.getList().get(0);
				am.setMenberPassword(this.getMD5Str("123456"));
				anzhimemberService.updateAnzhiMember(am,0);
				response.getWriter().write("密码重置成功!");
			}
		}else{
			response.getWriter().write("参数请求错误!");
		}
	}
	
	@RequestMapping(value="/anzhimember/getCodes",method=RequestMethod.POST)
	public void getCodes(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("textml;charset=utf-8");
		String codes=String.valueOf(Math.random());
		codes=codes.substring(3,9);
		QueryList<AnzhiMember> ls=null;
		String types=this.getInt(request, "findType")==0?"手机":"邮箱";
		if(this.checkParam(request, "findType")){
			if(this.getInt(request, "findType")==0&&this.checkParam(request, "telNum")){
				ls=anzhimemberService.findAnzhiMemberAll(1, 1, " and member_tel='"+request.getParameter("telNum")+"'");
			}else if(this.getInt(request, "findType")==1&&this.checkParam(request, "emailName")){
				ls=anzhimemberService.findAnzhiMemberAll(1, 1, " and member_email='"+request.getParameter("emailName")+"'");
			}
			if(ls.getList().size()==0){
				response.getWriter().write("该"+types+"还没有注册呢!");
				return;
			}
			if(ls.getList().size()>1){
				response.getWriter().write("该"+types+"不唯一!");
				return;
			}
			AnzhiMember am=ls.getList().get(0);
			if(this.getInt(request, "findType")==0){
				sendPost(request.getParameter("telNum"),"您找回密码的验证码是:"+codes+",[安之原创基地]");
				request.getSession().setAttribute("telCodeSession", codes);
			}else if(this.getInt(request, "findType")==1){
				sendEmail("安之原创基地密码找回","您找回密码的验证码是:"+codes+",[安之原创基地]",request.getParameter("emailName"),"安之原创基地");
				request.getSession().setAttribute("emailCodeSession", codes);
			}
			request.getSession().setAttribute("findPassMember", am);
			response.getWriter().write("验证码发送成功！请查收您的"+types);
		}else{
			response.getWriter().write("参数请求错误!");
		}
	}
	
	@RequestMapping(value="/anzhimember/checkCodes",method=RequestMethod.POST)
	public void checkCodes(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("textml;charset=utf-8");
		if(this.checkParam(request, "findType")&&this.checkParam(request, "codes")){
			if((this.getInt(request, "findType")==0&&request.getSession().getAttribute("telCodeSession")==null)||(this.getInt(request, "findType")==1&&request.getSession().getAttribute("emailCodeSession")==null)){
				response.getWriter().write("验证码请求错误！");
				return;
			}
			if(request.getSession().getAttribute("telCodeSession")==null&&request.getSession().getAttribute("emailCodeSession")==null){
				response.getWriter().write("验证码请求错误！");
				return;
			}
			String codes=this.getInt(request, "findType")==0?request.getSession().getAttribute("telCodeSession").toString():request.getSession().getAttribute("emailCodeSession").toString();
			if(codes.equals(request.getParameter("codes"))){
				response.getWriter().write("yes");
			}else{
				response.getWriter().write("验证码输入错误!");
			}
		}else{
			response.getWriter().write("参数请求错误!");
		}
	}
	
	@RequestMapping(value="/anzhimember/findPassword",method=RequestMethod.POST)
	public void findPassword(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("textml;charset=utf-8");
		if(this.checkParam(request, "newPassweord")){
			if(request.getSession().getAttribute("findPassMember")==null){
				response.getWriter().write("参数请求错误!");
				return;
			}
			AnzhiMember am=(AnzhiMember)request.getSession().getAttribute("findPassMember");
			am.setMenberPassword(this.getMD5Str(request.getParameter("newPassweord")));
			anzhimemberService.updateAnzhiMember(am, 5);
			response.getWriter().write("yes");
		}else{
			response.getWriter().write("参数请求错误!");
		}
	}
	
	public void sendEmail(String subject,String body,String toEmail,String sendName){
		EmailUtil eUtil=new EmailUtil();
		eUtil.emailSend(sendName, subject, body, toEmail);
	}
	
	public  String sendPost(String phone,String msg) {
		String result = "";
        BufferedReader in = null;
        try {
            String urlNameString ="http://api.cyooy.com/msg/addMsg.php?phone=" + phone+"&msg=wewe";
            URL realUrl = new URL(urlNameString);
            // 打开和URL之间的连接
            URLConnection connection = realUrl.openConnection();
            // 设置通用的请求属性
            connection.setRequestProperty("accept", "*/*");
            connection.setRequestProperty("connection", "Keep-Alive");
            connection.setRequestProperty("user-agent",
                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
            connection.setRequestProperty("Charset", "utf-8");
            // 建立实际的连接
            connection.connect();
            // 获取所有响应头字段
            Map<String, List<String>> map = connection.getHeaderFields();
            // 遍历所有的响应头字段
            /*for (String key : map.keySet()) {
                System.out.println(key + "--->" + map.get(key));
            }*/
            // 定义 BufferedReader输入流来读取URL的响应
            in = new BufferedReader(new InputStreamReader(
                    connection.getInputStream()));
            String line;
            while ((line = in.readLine()) != null) {
                result += line;
            }
        } catch (Exception e) {
            System.out.println("发送GET请求出现异常！" + e);
            e.printStackTrace();
        }
        // 使用finally块来关闭输入流
        finally {
            try {
                if (in != null) {
                    in.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        return result;
    }
	
	@RequestMapping(value="/anzhi/updateHeadImg",method=RequestMethod.POST)
	public void updateHeadImg(HttpServletRequest request,HttpServletResponse response) throws IOException{
		response.setContentType("text/html;charset=utf-8");
		String oldHeadImg=request.getParameter("oldHeadImg");
		AnzhiMember us=this.getLoginMember(request);
		if(us==null){
			response.sendRedirect(request.getContextPath()+"/index");
		}else{
			us.setMemberHeadImg(oldHeadImg);
			anzhimemberService.updateAnzhiMember(us,5);
			request.getSession().setAttribute("loginUsers", us);
			response.getWriter().write("头像修改成功!请刷新当前界面！");
		}
		
	}
}